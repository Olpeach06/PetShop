//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShop
{
    using System;
    using System.Collections.Generic;
    
    public partial class Products
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Products()
        {
            this.Baskets = new HashSet<Baskets>();
            this.Purchases = new HashSet<Purchases>();
        }
    
        public int ProductId { get; set; }
        public string Name { get; set; }
        public int Price { get; set; }
        public int Quantity { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
        public int CategoryId { get; set; }
        public int TypeOfPrTypeId { get; set; }
        public int FirmId { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Baskets> Baskets { get; set; }
        public virtual Categories Categories { get; set; }
        public virtual Firms Firms { get; set; }
        public virtual TypeOfPr TypeOfPr { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Purchases> Purchases { get; set; }

        public string CurrentPhoto
        {
            get
            {
                if (String.IsNullOrEmpty(Image) || String.IsNullOrWhiteSpace(Image))
                {
                    return "/Images/picture.jpg";
                }
                else
                {
                    return "/Images/" + Image;
                }
            }
        }
    }
}
